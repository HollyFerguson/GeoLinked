@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix uso: <http://www.myuso.exp#> .
@prefix geos: <http://schema.org/geo#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix geo: <http://www.opengis.net/ont/geosparql#> .

@prefix grddl: <https://www.w3.org/2003/g/data-view#> .
@prefix xslt: <https://www.w3.org/TR/xslt-30/schema-for-xslt30#> .
@prefix xpath: <https://www.w3.org/TR/1999/REC-xpath-19991116/#> .

@prefix gbxml: <http://www.gbxml.org/schema#> .
@prefix citygml: <http://www.citygml.org/index.php?id=1540#> .
@prefix ifcxml: <http://www.buildingsmart-tech.org/ifc/IFC4/final/html/index.htm#> .
@prefix gml: <http://www.opengis.net/gml#> .


citygml:surfaceMember  rdf:type    uso:SpaceBoundary ;
                 rdfs:comment """We start with Buildings and Relief Features because of CityGML structure/namespaces""" ;
                 grddl:transformation uso:SpaceBoundary ;
                 xslt:element "/city:CityModel/city:cityObjectMember/bldg:Building"^^xsd:string ;
                 rdfs:comment """list says how to get to the types of data we want called Name, ID, Thickness""" ;
                 xslt:list (
                            "level_paths"^^xsd:string
                            [ rdf:first _:b1 ;
                              rdf:rest  rdf:nil ]
                           ) ;
                 xslt:list (
                            "pre_process_paths"^^xsd:string
                            [ rdf:first _:b4 ;
                              rdf:rest rdf:nil ]
                           ) ;
                 xslt:attribute [ rdf:first citygml:xlink:href ;
                                  rdf:rest rdf:nil ] ;
                 rdfs:comment """isDefinedBy says how to match it to set of addresses in the passed dictionary""" ;
                 rdfs:isDefinedBy _:b0 .



_:b4  rdfs:isDefinedBy "/city:CityModel/city:cityObjectMember/bldg:Building"^^xsd:string ;
      xslt:attribute [ rdf:first citygml:id ;
                       rdf:rest [rdf:first citygml:none ;
                                 rdf:rest [rdf:first citygml:none ;
                                           rdf:rest [ rdf:first "fill_rest_with_parent_data"^^xsd:string ;
                                                      rdf:rest rdf:nil
                                                    ]
                                          ]
                                ]
                     ] ;
      grddl:transformationProperty [ rdf:first "/bldg:storeysAboveGround"^^xsd:string ;
                                     rdf:rest [ rdf:first "/bldg:measuredHeight"^^xsd:string ;
                                                rdf:rest [ rdf:first "/bldg:consistsOfBuildingPart/bldg:BuildingPart"^^xsd:string ;
                                                           rdf:rest rdf:nil
                                                         ]
                                              ]
                                   ] ;
      rdfs:comment """This part gives the 3 sets of level data that we are pulling from the instance (Name, Level, RelID)""" .



_:b0  rdfs:comment """first attribute relative to start point and second is match to destination point given""" ;
      xslt:attribute [ rdf:first citygml:id ;
                       rdf:rest [rdf:first citygml:surfaceIdRef ;
                                 rdf:rest rdf:nil ]
                     ] ;
      grddl:transformationProperty [ rdf:first "*/gb:gbXML/gb:Campus/gb:Building/gb:Space"^^xsd:string ;
                                     rdf:rest rdf:nil
                                   ] ;
      rdfs:isDefinedBy "Space"^^xsd:string .



_:b1  xslt:attribute [ rdf:first rdf:nil ;
                       rdf:rest rdf:nil
                     ] ;
      grddl:transformationProperty [ rdf:first "none"^^xsd:string ;
                                     rdf:rest rdf:nil
                                   ] .


